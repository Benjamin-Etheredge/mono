# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    runs-on: arc-runners-set
    container:
        image: ubuntu:24.04
    steps:
      - name: Apt Stuff
        run: "apt-get update && apt-get install -y curl"
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Initialize Pants
        uses: pantsbuild/actions/init-pants@main
        with:
          # cache0 makes it easy to bust the cache if needed
          gha-cache-key: cache0-lint-py3.12
          # gha-cache-key: cache0-py${{ matrix.python_version }}
          # named-caches-hash: ${{ hashFiles('lockfiles/*.json', '**/something-else.lock') }}
      - name: Lint
        run: "pants tailor --check update-build-files --check lint ::"
        # TODO add check
        # run: "pants tailor --check update-build-files --check lint check ::"

  test:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Initialize Pants
        uses: pantsbuild/actions/init-pants@main
        with:
          # cache0 makes it easy to bust the cache if needed
          gha-cache-key: cache0-test-py3.12
          # gha-cache-key: cache0-py${{ matrix.python_version }}
          # named-caches-hash: ${{ hashFiles('lockfiles/*.json', '**/something-else.lock') }}
      - name: Test
        run: "pants test ::"

  publish:
    runs-on: arc-runners-set
    services:
      docker:
        image: docker:dind
        options: --privileged
        ports:
          - 2375:2375
    container:
        image: ubuntu:24.04
    # needs: [lint, test]
    steps:
      - name: Apt Stuff
        run: "apt-get update && apt-get install -y curl"
      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Initialize Pants
        uses: pantsbuild/actions/init-pants@main
        with:
          # cache0 makes it easy to bust the cache if needed
          gha-cache-key: cache0-publish-py3.12
          # gha-cache-key: cache0-py${{ matrix.python_version }}
      - name: Debug0
        run: "docker info"
      - name: Debug
        run: "pants dependencies src/itty:img"
      - name: Debug2
        run: "pants package src/itty:img"
      - name: Package
        run: "pants package ::"
      - name: Publish
        run: "pants publish ::"
      - name: Upload pants log
        uses: actions/upload-artifact@v4
        with:
          name: pants-log-lint
          path: .pants.d/pants.log
